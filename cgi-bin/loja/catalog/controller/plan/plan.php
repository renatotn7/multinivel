<?phpclass ControllerPlanPlan extends Controller {    private $error = array();    public function index() {        if (!$this->customer->eConsultor()) {            $this->redirect($this->url->link('common/home'));        }        //Se tiver plano não acessa        $this->load->model('catalog/planos');        $temPlano = $this->model_catalog_planos->getTemPlanoDistribuidor($this->customer->getConsultorId());                //REDIRECIONA SE NÃO TER PLANO        if ($temPlano == true) {            echo "<script>location.href='" . HTTP_SERVER . "index.php';</script>";            exit;        }        $this->language->load('product/product');        $this->data['breadcrumbs'] = array();        $this->data['breadcrumbs'][] = array(            'text' => $this->language->get('text_home'),            'href' => $this->url->link('common/home'),            'separator' => false        );        $this->document->setTitle('Compre seu plano');        $data['is_plan'] = 1;        $data['sort'] = 'p.price';        $this->load->model('catalog/product');        $this->load->model('tool/image');        $this->data['products'] = array();        $results = $this->model_catalog_product->getProducts($data);        foreach ($results as $result) {            if ($result['image']) {                $image = $this->model_tool_image->resize($result['image'], 200, 200);            } else {                $image = false;            }            if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {                $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));            } else {                $price = false;            }            if ((float) $result['special']) {                $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));            } else {                $special = false;            }            if ($this->config->get('config_tax')) {                $tax = $this->currency->format((float) $result['special'] ? $result['special'] : $result['price']);            } else {                $tax = false;            }            if ($this->config->get('config_review_status')) {                $rating = (int) $result['rating'];            } else {                $rating = false;            }            $this->data['products'][] = array(                'product_id' => $result['product_id'],                'thumb' => $image,                'name' => $result['name'],                'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',                'price' => $price,                'quantity' => $result['quantity'],                'special' => $special,                'tax' => $tax,                'rating' => $result['rating'],                'href' => $this->url->link('product/product', 'product_id=' . $result['product_id']),                'reviews' => sprintf($this->language->get('text_reviews'), (int) $result['reviews']),                'stock'=> $this->stock($result['product_id'])            );        }        $this->template = 'default/template/plan/plan.tpl';        $this->children = array(            'common/column_left',            'common/column_right',            'common/content_top',            'common/content_bottom',            'common/footer',            'common/header'        );        $this->response->setOutput($this->render());    }    public function upgrade() {        if (!$this->customer->eConsultor()) {            $this->redirect($this->url->link('common/home'));        }        $this->language->load('product/product');        $this->data['breadcrumbs'] = array();        $this->data['breadcrumbs'][] = array(            'text' => $this->language->get('text_home'),            'href' => $this->url->link('common/home'),            'separator' => false        );        $this->document->setTitle('Compre seu plano');        $this->load->model('catalog/planos');        $planoAtual = $this->model_catalog_planos->getPlano($this->customer->getConsultorId());        if (count($planoAtual) == 0) {            $this->redirect($this->url->link('common/home'));        }        $data['is_plan'] = 0;        $data['is_upgrade'] = 1;        $data['sort'] = 'p.price';        $data['upgrade_para'] = $planoAtual['ps_plano'];        $this->load->model('catalog/product');        $this->load->model('tool/image');        $this->data['products'] = array();        $results = $this->model_catalog_product->getProducts($data);        foreach ($results as $result) {            if ($result['image']) {                $image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height'));            } else {                $image = false;            }            if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {                $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));            } else {                $price = false;            }            if ((float) $result['special']) {                $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));            } else {                $special = false;            }            if ($this->config->get('config_tax')) {                $tax = $this->currency->format((float) $result['special'] ? $result['special'] : $result['price']);            } else {                $tax = false;            }            if ($this->config->get('config_review_status')) {                $rating = (int) $result['rating'];            } else {                $rating = false;            }            $this->data['products'][] = array(                'product_id' => $result['product_id'],                'thumb' => $image,                'name' => $result['name'],                'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',                'price' => $price,                'quantity' => $result['quantity'],                'special' => $special,                'tax' => $tax,                'rating' => $result['rating'],                'href' => $this->url->link('product/product', 'product_id=' . $result['product_id']),                'reviews' => sprintf($this->language->get('text_reviews'), (int) $result['reviews'])            );        }        $this->template = 'default/template/plan/upgrade.tpl';        $this->children = array(            'common/column_left',            'common/column_right',            'common/content_top',            'common/content_bottom',            'common/footer',            'common/header'        );        $this->response->setOutput($this->render());    }        public function activation() {        if (!$this->customer->eConsultor()) {            $this->redirect($this->url->link('common/home'));        }        $this->language->load('product/product');        $this->data['breadcrumbs'] = array();        $this->data['breadcrumbs'][] = array(            'text' => $this->language->get('text_home'),            'href' => $this->url->link('common/home'),            'separator' => false        );        $this->document->setTitle('Compre seu plano');        $this->load->model('catalog/planos');        $planoAtual = $this->model_catalog_planos->getPlano($this->customer->getConsultorId());        if (count($planoAtual) == 0) {            $this->redirect($this->url->link('common/home'));        }        $data['is_plan'] = 0;        $data['is_activation'] = 1;        $data['sort'] = 'p.price';        $this->load->model('catalog/product');        $this->load->model('tool/image');        $this->data['products'] = array();        $results = $this->model_catalog_product->getProducts($data);        foreach ($results as $result) {            if ($result['image']) {                $image = $this->model_tool_image->resize($result['image'], $this->config->get('config_image_product_width'), $this->config->get('config_image_product_height'));            } else {                $image = false;            }            if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {                $price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')));            } else {                $price = false;            }            if ((float) $result['special']) {                $special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')));            } else {                $special = false;            }            if ($this->config->get('config_tax')) {                $tax = $this->currency->format((float) $result['special'] ? $result['special'] : $result['price']);            } else {                $tax = false;            }            if ($this->config->get('config_review_status')) {                $rating = (int) $result['rating'];            } else {                $rating = false;            }            $this->data['products'][] = array(                'product_id' => $result['product_id'],                'thumb' => $image,                'name' => $result['name'],                'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, 100) . '..',                'price' => $price,                'quantity' => $result['quantity'],                'special' => $special,                'tax' => $tax,                'rating' => $result['rating'],                'href' => $this->url->link('product/product', 'product_id=' . $result['product_id']),                'reviews' => sprintf($this->language->get('text_reviews'), (int) $result['reviews'])            );        }        $this->template = 'default/template/plan/activation.tpl';        $this->children = array(            'common/column_left',            'common/column_right',            'common/content_top',            'common/content_bottom',            'common/footer',            'common/header'        );        $this->response->setOutput($this->render());    }        public function stock($product_id){        $this->load->model('catalog/planos');        $temStock = $this->model_catalog_planos->getStockPlanos($product_id);        return $temStock['total'];    }    }?>