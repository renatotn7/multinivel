<?phpclass ModelSettingStore extends Model {    public function addStore($data) {        $this->db->query("INSERT INTO " . DB_PREFIX . "store SET name = '" . $this->db->escape($data['config_name']) . "', `url` = '" . $this->db->escape($data['config_url']) . "', `ssl` = '" . $this->db->escape($data['config_ssl']) . "'");        $rs = $this->db->query("select LAST_INSERT_ID() as id")->row;        $store_id = $rs['id'];        $this->db->insert("INSERT INTO loja_customer                     (`customer_id`, consultor_id, `store_id`, `firstname`, `lastname`, `email`, `telephone`, `fax`, `password`, `salt`, `cart`, `wishlist`, `newsletter`, `address_id`, `customer_group_id`, `ip`, `status`, `approved`, `token`, `date_added`)                     VALUES (NULL, '1', '" . $store_id . "', '" . $this->db->escape($data['config_name']) . "', '   ', '" . $this->db->escape($data['config_email']) . "', '0000000000', '', '', '', 'a:0:{}', '', '1', '1', '3', '127.0.0.1', '1', '1', '', '" . date('Y-m-d H:i:s') . "');");        $this->cache->delete('store');        return $this->db->getLastId();    }    public function editStore($store_id, $data) {        $this->db->query("UPDATE " . DB_PREFIX . "store SET status = '1', name = '" . $this->db->escape($data['config_name']) . "', `url` = '" . $this->db->escape($data['config_url']) . "', `ssl` = '" . $this->db->escape($data['config_ssl']) . "' WHERE store_id = '" . (int) $store_id . "'");        $sql = "UPDATE loja_customer SET status = 1, approved = 1, firstname = '" . $this->db->escape($data['config_name']) . "', email = '" . $this->db->escape($data['config_email']) . "' WHERE loja_customer.store_id = " . (int) $store_id . ";";        $this->db->query($sql);        $this->cache->delete('store');    }    public function deleteStore($store_id) {        $this->db->query("UPDATE " . DB_PREFIX . "store SET status = '0' WHERE store_id = '" . (int) $store_id . "'");        $sql = "UPDATE loja_customer SET status = '0' WHERE loja_customer.store_id = " . (int) $store_id . ";";        $this->db->query($sql);        //$this->cache->delete('store');    }    public function getStore($store_id) {        $query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "store WHERE store_id = '" . (int) $store_id . "'");        return $query->row;    }    public function getCustomer($store_id) {        $query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "customer WHERE store_id = '" . (int) $store_id . "'");        return $query->row;    }    public function getStores($data = array()) {        $store_data = $this->cache->get('store');        if (!$store_data) {            $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "store ORDER BY url");            $store_data = $query->rows;            $this->cache->set('store', $store_data);        }        return $store_data;    }    public function getTotalStores() {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "store");        return $query->row['total'];    }    public function getTotalStoresByLayoutId($layout_id) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_layout_id' AND `value` = '" . (int) $layout_id . "' AND store_id != '0'");        return $query->row['total'];    }    public function getTotalStoresByLanguage($language) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_language' AND `value` = '" . $this->db->escape($language) . "' AND store_id != '0'");        return $query->row['total'];    }    public function getTotalStoresByCurrency($currency) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_currency' AND `value` = '" . $this->db->escape($currency) . "' AND store_id != '0'");        return $query->row['total'];    }    public function getTotalStoresByCountryId($country_id) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_country_id' AND `value` = '" . (int) $country_id . "' AND store_id != '0'");        return $query->row['total'];    }    public function getTotalStoresByZoneId($zone_id) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_zone_id' AND `value` = '" . (int) $zone_id . "' AND store_id != '0'");        return $query->row['total'];    }    public function getTotalStoresByCustomerGroupId($customer_group_id) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_customer_group_id' AND `value` = '" . (int) $customer_group_id . "' AND store_id != '0'");        return $query->row['total'];    }    public function getTotalStoresByInformationId($information_id) {        $account_query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_account_id' AND `value` = '" . (int) $information_id . "' AND store_id != '0'");        $checkout_query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_checkout_id' AND `value` = '" . (int) $information_id . "' AND store_id != '0'");        return ($account_query->row['total'] + $checkout_query->row['total']);    }    public function getTotalStoresByOrderStatusId($order_status_id) {        $query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "setting WHERE `key` = 'config_order_status_id' AND `value` = '" . (int) $order_status_id . "' AND store_id != '0'");        return $query->row['total'];    }}?>